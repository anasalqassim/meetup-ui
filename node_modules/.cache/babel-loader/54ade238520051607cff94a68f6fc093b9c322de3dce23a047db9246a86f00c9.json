{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignUp = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signUp = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    const response = await fetch('http://alpha-meme-maker.herokuapp.com/1', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: \"no-cors\"\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      localStorage.setItem(\"user\", JSON.stringify(json));\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setLoading(false);\n    }\n  };\n  return {\n    signUp,\n    isLoading,\n    error\n  };\n};\n_s(useSignUp, \"U9i9UdwQ9+F7LD5+LWlbiFtSAW8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignUp","error","setError","isLoading","setLoading","dispatch","signUp","email","password","response","fetch","method","headers","mode","json","ok","localStorage","setItem","JSON","stringify","type","payload"],"sources":["/Users/anasalqassim/Downloads/react-complete-guide-code-zz-reactjs-summary/code/19-finished/src/hooks/useSignUp.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\n\n\nexport const useSignUp = () =>{\n    const [error,setError] = useState(null)\n    const [isLoading,setLoading] = useState(null)\n    const {dispatch} = useAuthContext()\n\n    const signUp  = async (email,password) => {\n        setLoading(true)\n        setError(null)\n        \n\n        const response = await fetch('http://alpha-meme-maker.herokuapp.com/1',{\n            method:'GET',\n            headers:{'Content-Type':'application/json'},\n            mode:\"no-cors\"\n        })\n        \n        const json = await response.json()\n        \n        if(!response.ok){\n            setLoading(false)\n            setError(json.error)\n        }\n        if(response.ok){\n            localStorage.setItem(\"user\",JSON.stringify(json))\n            \n            dispatch({type:'LOGIN',payload:json})\n\n            setLoading(false)\n            \n        }\n\n        \n    }\n\n\n    return {signUp,isLoading,error}\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAGjD,OAAO,MAAMC,SAAS,GAAG,MAAK;EAAA;EAC1B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACK,SAAS,EAACC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM;IAACO;EAAQ,CAAC,GAAGN,cAAc,EAAE;EAEnC,MAAMO,MAAM,GAAI,OAAOC,KAAK,EAACC,QAAQ,KAAK;IACtCJ,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IAGd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAC;MACnEC,MAAM,EAAC,KAAK;MACZC,OAAO,EAAC;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC3CC,IAAI,EAAC;IACT,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,EAAE;IAElC,IAAG,CAACL,QAAQ,CAACM,EAAE,EAAC;MACZX,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAACY,IAAI,CAACb,KAAK,CAAC;IACxB;IACA,IAAGQ,QAAQ,CAACM,EAAE,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;MAEjDT,QAAQ,CAAC;QAACe,IAAI,EAAC,OAAO;QAACC,OAAO,EAACP;MAAI,CAAC,CAAC;MAErCV,UAAU,CAAC,KAAK,CAAC;IAErB;EAGJ,CAAC;EAGD,OAAO;IAACE,MAAM;IAACH,SAAS;IAACF;EAAK,CAAC;AACnC,CAAC;AAAA,GApCYD,SAAS;EAAA,QAGCD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}